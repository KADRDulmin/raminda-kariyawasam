---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
    color: #fff;
    font-size: 1rem;
    font-weight: 500;
    transition: color 0.3s ease;
    position: relative;
    padding: 0.5rem 0;
    box-sizing: border-box;
    white-space: nowrap;
    width: fit-content;
  }

  a::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: var(--accent);
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  a:hover,
  a.active {
    color: var(--accent);
  }

  a:hover::after,
  a.active::after {
    transform: scaleX(1);
  }

  @media (max-width: 768px) {
    a {
      width: 100%;
      font-size: 1.2rem;
      padding: 1rem 0;
      text-align: center;
      box-sizing: border-box;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    a:last-child {
      border-bottom: none;
    }

    a::after {
      bottom: -2px;
    }
  }
</style>
